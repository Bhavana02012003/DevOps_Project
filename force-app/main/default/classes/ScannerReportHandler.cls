public with sharing class ScannerReportHandler {
    @AuraEnabled
    public static void createAttachmentForCase(String caseId) {
        try {
            System.debug('üìÇ Fetching Case ID: ' + caseId);

            // Fetch the related Case record
            Case caseRecord = [
                SELECT Id, ContentDocumentId__c, File_Name__c 
                FROM Case 
                WHERE Id = :caseId 
                LIMIT 1
            ];

            if (caseRecord.ContentDocumentId__c == null) {
                System.debug('‚ö†Ô∏è No file associated with this case.');
                return;
            }

            // Retrieve the stored ContentVersion file
            List<ContentVersion> fileVersions = [
                SELECT Id, VersionData, Title, FileExtension
                FROM ContentVersion 
                WHERE ContentDocumentId = :caseRecord.ContentDocumentId__c 
                ORDER BY CreatedDate DESC 
                LIMIT 1
            ];

            if (fileVersions.isEmpty()) {
                System.debug('‚ö†Ô∏è No ContentVersion file found for ContentDocumentId: ' + caseRecord.ContentDocumentId__c);
                return;
            }

            ContentVersion fileVersion = fileVersions[0];

            // Ensure the file is a CSV before creating an attachment
            if (fileVersion.FileExtension != 'csv') {
                System.debug('‚ö†Ô∏è Skipping non-CSV file: ' + fileVersion.Title);
                return;
            }

            System.debug('‚úÖ File found! Creating attachment...');

            // Ensure the file name has a .csv extension
            String fileName = fileVersion.Title;
            if (!fileName.toLowerCase().endsWith('.csv')) {
                fileName += '.csv';
            }

            // Convert file data into a Blob
            Blob fileBlob = fileVersion.VersionData;

            // **Create the Attachment Record**
            Attachment attachment = new Attachment();
            attachment.Name = fileName;
            attachment.Body = fileBlob; // Store CSV content correctly
            attachment.ParentId = caseRecord.Id; // Attach to Case record
            attachment.ContentType = 'text/csv'; // Ensure correct MIME type

            insert attachment;

            System.debug('‚úÖ CSV Attachment successfully created and linked to Case ID: ' + caseId);

        } catch (Exception e) {
            System.debug('‚ùå Error creating CSV attachment: ' + e.getMessage());
        }
    }
}
